---
import { Image } from "astro:assets";
import localImage from "../assets/sebastian-lagos.jpg";
const localAlt = "Sebastian Lagos - Dev Designer";
---

<div class="card-container" data-tilt data-tilt-glare data-tilt-max-glare="0.2">
  <span class="pro">DEV</span>
  <Image class="round" src={localImage} alt={localAlt} width={150} />

  <h1>Sebastian Lagos ðŸ‡¨ðŸ‡±</h1>
  <h2>Developer Front-End</h2>
  <div class="buttons">
    <a
      href="https://www.linkedin.com/in/sebasti%C3%A1n-lagos-40b1331a5/"
      target="_blank"
      class="primary"
    >
      LINKIN
    </a>
    <a
      href="https://github.com/sebahernandez"
      target="_blank"
      class="primary ghost"
    >
      GITHUB
    </a>
  </div>
  <div class="skills">
    <h6>Habilidades</h6>
    <ul>
      <li>UI / UX</li>
      <li>Shopify Liquid</li>
      <li>HTML 5</li>
      <li>CSS CSS3</li>
      <li>JavaScript (ES6)</li>
      <li>React Js</li>
      <li>Node Js</li>
      <li>Figma</li>
      <li>Adobe Suite</li>
    </ul>
    <h6>Proyectos</h6>
    <ul>
      <li>Weecost (JS)</li>
      <li>TODO (React)</li>
      <li>Finder Film (React)</li>
    </ul>
  </div>
</div>

<style>
  .card-container {
    background-color: #231e39;
    border-radius: 5px;
    box-shadow: 0px 10px 20px -10px rgba(0, 0, 0, 0.75);
    color: #b3b8cd;
    padding-top: 30px;
    position: relative;
    width: 350px;
    max-width: 100%;
    text-align: center;
    transform-style: preserve-3d;
    transform: perspective(1000px);
  }

  .card-container .pro {
    color: #231e39;
    background-color: #febb0b;
    border-radius: 3px;
    font-size: 14px;
    font-weight: bold;
    padding: 3px 7px;
    position: absolute;
    top: 30px;
    left: 30px;
  }

  .card-container .round {
    border: 1px solid #03bfcb;
    border-radius: 50%;
    padding: 7px;
    width: 150px;
    transform: translateZ(40px);
  }

  .ball {
    position: absolute;
    border-radius: 100%;
    opacity: 0.7;
    z-index: -1;
    transform: translateZ(20px);
  }

  .card-container .round {
    border: 1px solid #03bfcb;
    border-radius: 50%;
    padding: 7px;
    width: 150px;
    transform: translateZ(20px);
  }

  a.primary {
    background-color: #03bfcb;
    border: 1px solid #03bfcb;
    border-radius: 3px;
    color: #231e39;
    font-family: Montserrat, sans-serif;
    font-weight: 500;
    padding: 10px 25px;
    text-decoration: none;
    margin: 10px 10px;
  }

  a.primary.ghost {
    background-color: transparent;
    color: #02899c;
  }

  .skills {
    background-color: #1f1a36;
    text-align: left;
    padding: 15px;
    margin-top: 30px;
  }

  .skills ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  .skills ul li {
    border: 1px solid #2d2747;
    border-radius: 2px;
    display: inline-block;
    font-size: 12px;
    margin: 0 7px 7px 0;
    padding: 7px;
  }

  .buttons {
    padding: 10px 0px;
    transform: translateZ(20px);
  }

  h1,
  h2 {
    transform: translateZ(20px);
  }
  h1 {
    margin: 0px;
  }
  h2 {
    font-size: 16px;
  }
</style>

<script>
  import VanillaTilt from "vanilla-tilt";
  VanillaTilt.init(Array.from(document.querySelectorAll(".card-container")), {
    reverse: false, // reverse the tilt direction
    max: 15, // max tilt rotation (degrees)
    startX: 0, // the starting tilt on the X axis, in degrees.
    startY: 0, // the starting tilt on the Y axis, in degrees.
    perspective: 1000, // Transform perspective, the lower the more extreme the tilt gets.
    scale: 1, // 2 = 200%, 1.5 = 150%, etc..
    speed: 300, // Speed of the enter/exit transition
    transition: true, // Set a transition on enter/exit.
    axis: null, // What axis should be enabled. Can be "x" or "y".
    reset: true, // If the tilt effect has to be reset on exit.
    "reset-to-start": true, // Whether the exit reset will go to [0,0] (default) or [startX, startY]
    easing: "cubic-bezier(.03,.98,.52,.99)", // Easing on enter/exit.
    glare: false, // if it should have a "glare" effect
    "max-glare": 1, // the maximum "glare" opacity (1 = 100%, 0.5 = 50%)
    "glare-prerender": false, // false = VanillaTilt creates the glare elements for you, otherwise
    // you need to add .js-tilt-glare>.js-tilt-glare-inner by yourself
    "mouse-event-element": null, // css-selector or link to an HTML-element that will be listening to mouse events
    "full-page-listening": false, // If true, parallax effect will listen to mouse move events on the whole document, not only the selected element
    gyroscope: true, // Boolean to enable/disable device orientation detection,
    gyroscopeMinAngleX: -45, // This is the bottom limit of the device angle on X axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the left border of the element;
    gyroscopeMaxAngleX: 45, // This is the top limit of the device angle on X axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the right border of the element;
    gyroscopeMinAngleY: -45, // This is the bottom limit of the device angle on Y axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the top border of the element;
    gyroscopeMaxAngleY: 45, // This is the top limit of the device angle on Y axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the bottom border of the element;
    gyroscopeSamples: 10, // How many gyroscope moves to decide the starting position.
  });
</script>â€º
